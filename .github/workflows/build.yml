name: Build Database

concurrency: 
  group: database-build

# Controls when the action will run. 
on:
  # Uncomment this to run this workflow on a schedule
  # schedule:
    # * is a special character in YAML so you have to quote this string
    # - cron:  '15 2 * * *'    

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
  
env:
  ASSET: name_of_database.zip

jobs:
  build:
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      - uses: actions/checkout@v2
      - name: setup requirements
        run: pip install -r requirements.txt
      - name: build database
        run: make
      - name: prepare database for upload
        run: zip ${{ env.ASSET}} name_of_database.db
      - name: release # if you have large artifacts upload to a repo's release.
        uses: WebFreak001/deploy-nightly@v1.2.0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # automatically provided by github actions
          RELEASE_ID: 790947 # find out this value by opening https://api.github.com/repos/<owner>/<repo>/releases in your browser and copy the "id" value
        with:
          upload_url: https://uploads.github.com/repos/${{ github.repository }}/releases/${{ env.RELEASE_ID }}/assets{?name,label}
          release_id: ${{ env.RELEASE_ID }}
          asset_path: ${{ env.ASSET }}
          asset_name: ${{ env.ASSET }} # name to upload the release as, use $$ to insert date (YYYYMMDD) and 6 letter commit hash
          asset_content_type: application/zip # required by GitHub API
          max_releases: 7 # optional, if there are more releases than this matching the asset_name, the oldest ones are going to be deleted
      - name: keepalive
        uses: gautamkrishnar/keepalive-workflow@v1
